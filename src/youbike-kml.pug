extends /layout/default

block beforehtml
  - const title = 'YouBike 站點 KML 產生器'

block style
  meta(property="fb:app_id", content="2133031763635285")
  meta(property="og:description", content="YouBike 站點 KML 產生器")
  meta(property="og:locale", content="zh_TW")
  meta(property="og:site_name", content="筆記國度")
  meta(property="og:title", content=title)
  meta(property="og:type", content="website")
  meta(property="og:url", content="https://taichunmin.idv.tw/pug/youbike-kml.html")
  style
    :sass
      [v-cloak]
        display: none
      body, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6
        font-family: 'Noto Sans TC', sans-serif

block content
  #app.my-3.text-monospace.container(v-cloak)
    .card
      .card-body
        h5.card-title= title
        p.card-text 下載所有 KML 檔案後，匯入#[a(target="_blank", href="https://www.google.com/maps/d/u/0/edit?mid=13mn_G-uGGAYmHqmHpUeodqYxssas5WdS&usp=sharing") 「YouBike 站點地圖」]中。
      .list-group.list-group-flush
        a.list-group-item.list-group-item-action.list-group-item-info(v-for="kml of kmls", :key="kml.url", target="_blank", :href="kml.url", :download="kml.filename") 請點此下載 {{ kml.filename }} #[span.badge.badge-light {{ kml.size }}]

block script
  script.
    window.vm = new Vue({
      el: '#app',
      data: {
        kmls: [],
      },
      async mounted () {
        await this.init()
      },
      methods: {
        async init () {
          try {
            this.showLoading('請稍候…', '正在產生 KML')
            const stationsByType = await this.getStationsByType()
            const today = dayjs().format('YYYY-MM-DD')
            for (const [type, stations] of _.toPairs(stationsByType)) {
              const chunks = _.chunk(stations, 2000)
              for (const [chunkNo, chunk] of _.toPairs(chunks)) {
                const part = _.toSafeInteger(chunkNo) + 1
                const kml = this.placeToKml({
                  name: `${today} YouBike ${type}.0 (第 ${part} 部份)`,
                  places: _.map(chunk, s => ({
                    coordinates: `${_.round(s.lng, 6)},${_.round(s.lat, 6)},0`,
                    description: `地址: ${s.city}${s.area}${s.address}\n車位: ${s.space}`,
                    name: s.name,
                  })),
                })
                this.kmls.push({
                  filename: `yb${type}_${part}_${today}.kml`,
                  size: chunk.length,
                  url: this.strToObjectURL(kml, { type: 'application/vnd.google-earth.kml+xml; charset=utf-8' }),
                })
              }
            }
            await Swal.fire({ icon: 'success', title: 'KML 產生成功' })
          } catch (err) {
            console.error(err)
            await Swal.fire({ icon: 'error', title: 'KML 產生失敗', text: err.message })
          }
        },
        async getStationsByType () {
          const tsOneDayAgo = _.floor(Date.now() / 1e3) - 86400
          let stations = await this.getCsv('https://gcs-youbike2-linebot.taichunmin.idv.tw/latest-data/youbike-station.csv')
          stations = _.filter(stations, s => _.toSafeInteger(s.updated_at) > tsOneDayAgo)
          return _.groupBy(stations, 'type')
        },
        async getCsv (url, cachetime = 3e4) {
          const csv = _.trim(_.get(await axios.get(url, {
            params: { cachebust: _.floor(Date.now() / cachetime) },
          }), 'data'))
          return _.get(Papa.parse(csv, {
            encoding: 'utf8',
            header: true,
          }), 'data', [])
        },
        placeToKml ({ name, places }) {
          const fn1 = (tag, text) => {
            const tmp = document.createElement(tag)
            tmp.appendChild(document.createTextNode(text))
            return tmp
          }
          const dom = document.createElement('div')

          // name
          dom.appendChild(fn1('name', name))

          // places
          for (const place of places) {
            const domPlace = document.createElement('Placemark')
            domPlace.appendChild(fn1('name', place.name))
            domPlace.appendChild(fn1('description', place.description))
            const domPlacePoint = document.createElement('Point')
            domPlacePoint.appendChild(fn1('coordinates', place.coordinates))
            domPlace.appendChild(domPlacePoint)
            dom.appendChild(domPlace)
          }

          return `<?xml version="1.0" encoding="UTF-8"?><kml xmlns="http://www.opengis.net/kml/2.2"><Document>${dom.innerHTML.replace(/<(\/?)p(lacemark|oint)>/g, '<$1P$2>')}</Document></kml>`
        },
        strToObjectURL (str, options) {
          return URL.createObjectURL(new Blob([str], options))
        },
        showLoading (title, text) {
          Swal.fire({
            title,
            text,
            allowOutsideClick: false,
            showConfirmButton: false,
            willOpen: () => { Swal.showLoading() },
          })
        },
      },
    })
