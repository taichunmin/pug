extends /layout/dark

block beforehtml
  - const title = 'NFC EasyCard Viewer'

block style
  style
    :sass
      [v-cloak]
        display: none
      body, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6
        font-family: 'Noto Sans TC', sans-serif
      #card
        &, input.form-control
          letter-spacing: -1px
        textarea.form-control
          font-size: 12px
        .input-group-prepend .input-group-text
          letter-spacing: -2px
          min-width: 80px

block content
  #app.my-3.container-fluid(v-cloak)
    h2.mb-3.text-center=title
    #card.text-monospace.d-flex.flex-column.flex-md-row
      .mr-sm-3
        .form-group
          label 卡片基本資料
          .row.mx-n1
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 卡片編號
              input.form-control(readonly, :value="card?.uid")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 交易序號
              input.form-control(readonly, :value="card?.tsqn")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 餘額
              input.form-control(readonly, :value="card?.balance")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 預設加值
              input.form-control(readonly, :value="card?.autoload")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 加值銀行
              input.form-control(readonly, :value="card?.bank")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 每日限額
              input.form-control(readonly, :value="card?.quota?.daily")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 單次限額
              input.form-control(readonly, :value="card?.quota?.once")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 限額日期
              input.form-control(readonly, :value="card?.quota?.date")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 已用限額
              input.form-control(readonly, :value="card?.quota?.used")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 身份別
              input.form-control(readonly, :value="card?.profile?.type")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 身份到期
              input.form-control(readonly, :value="card?.profile?.exp")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 卡別
              input.form-control(readonly, :value="card?.type")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 區碼
              input.form-control(readonly, :value="card?.area")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 發卡時間
              input.form-control(readonly, :value="card?.issued")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 卡片效期
              input.form-control(readonly, :value="card?.exp")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 功能開關
              input.form-control(readonly, :value="card?.usageControl")
        .form-group(v-for="xfer in card.xfers")
          label 轉乘紀錄 {{ xfer.tsqn }}
          .row.mx-n1
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 交易序號
              input.form-control(readonly, :value="xfer?.tsqn")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 時間
              input.form-control(readonly, :value="xfer?.time")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 優惠方式
              input.form-control(readonly, :value="xfer?.type")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 扣款
              input.form-control(readonly, :value="xfer?.amount")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 餘額
              input.form-control(readonly, :value="xfer?.ev")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 轉乘前群組
              input.form-control(readonly, :value="xfer?.before")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 轉乘後群組
              input.form-control(readonly, :value="xfer?.after")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 舊轉乘群組
              input.form-control(readonly, :value="xfer?.oldXferGroup")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 場站
              input.form-control(readonly, :value="xfer?.location")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 設備編號
              input.form-control(readonly, :value="xfer?.device")
        .form-group(v-for="txn of [card.credit]")
          label 最近加值交易
          .row.mx-n1
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 交易序號
              input.form-control(readonly, :value="txn?.tsqn")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 時間
              input.form-control(readonly, :value="txn?.time")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 交易方式
              input.form-control(readonly, :value="txn?.type")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 加值金額
              input.form-control(readonly, :value="txn?.amount")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 餘額
              input.form-control(readonly, :value="txn?.ev")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 業者
              input.form-control(readonly, :value="txn?.provider")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 場站
              input.form-control(readonly, :value="txn?.location")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 設備編號
              input.form-control(readonly, :value="txn?.device")
        .form-group
          label 最近扣款交易
          .table-responsive
            table.table.table-sm.table-bordered.table-striped.text-center
              thead: tr.text-nowrap
                th #
                th 時間
                th 類別
                th 扣款
                th 餘額
                th 業者
                th 場站
                th 設備
              tbody
                tr(v-for="txn of card.deducts")
                  th {{ txn?.tsqn }}
                  td {{ txn?.time }}
                  td {{ txn?.type }}
                  td {{ txn?.amount }}
                  td {{ txn?.ev }}
                  td {{ txn?.provider }}
                  td {{ txn?.location }}
                  td {{ txn?.device }}
        .form-group(v-for="bus, busId of card.buses")
          label 公車{{ '上下'[busId] }}車紀錄
          .row.mx-n1
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 操作員編號
              input.form-control(readonly, :value="bus?.agent")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 路線編號
              input.form-control(readonly, :value="bus?.line")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 時間
              input.form-control(readonly, :value="bus?.time")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 站牌編號
              input.form-control(readonly, :value="bus?.station")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 區段編號
              input.form-control(readonly, :value="bus?.zone")
        .form-group
          label 進出站紀錄
          .table-responsive
            table.table.table-sm.table-bordered.table-striped.text-center
              thead: tr.text-nowrap
                th 時間
                th 進出站
                th 業者
                th 場站
                th 累計次數
                th 累計金額
              tbody
                tr(v-for="mrt of card.mrts")
                  td {{ mrt?.time }}
                  td {{ mrt?.type }}
                  td {{ mrt?.provider }}
                  td {{ mrt?.location }}
                  td {{ mrt?.count }}
                  td {{ mrt?.amount }}
      .form-group(style="min-width: 250px")
        label EML (HEX)
        textarea.form-control.form-control-sm(rows="65", v-model="h.eml")

block script
  script(crossorigin="anonymous", src="https://cdn.jsdelivr.net/npm/moment@2/moment.min.js")
  script(crossorigin="anonymous", src="https://cdn.jsdelivr.net/npm/moment@2/locale/zh-tw.min.js")
  script.
    const URL_GIST = 'https://gist.githubusercontent.com/taichunmin/f4699905e583354b2cbd1a6e67484235/raw'
    window.createGetMappingOrHexFn = (key, byteLength = 1) => {
      return function (byteOffset) {
        const hex = window.vm.getHex(byteOffset, byteLength)
        return _.get(window, `vm.${key}.${hex}`, `0x${hex}`)
      }
    }
    window.vm = new Vue({
      el: '#app',
      data: {
        ready: false,
        cached: {},
        h: {
          eml: '',
        },
      },
      async mounted () {
        // 自動儲存功能
        try {
          const saved = JSON5.parse(localStorage.getItem(location.pathname))
          if (saved) this.$set(this, 'h', { ...this.h, ...saved })
        } catch (err) {}
        this.$watch('h', () => {
          localStorage.setItem(location.pathname, JSON5.stringify(this.h))
        }, { deep: true })

        await this.init()
        this.ready = true
      },
      computed: {
        dv () {
          try {
            const hex = this.h.eml.replace(/-/g, '0').replace(/[^0-9A-Fa-f]/g, '')
            if (hex.length !== 2048) throw new Error('eml 長度有誤')
            return new DataView(new Uint8Array(_.map(hex.match(/.{2}/g), b => _.parseInt(b, 16))).buffer)
          } catch (err) {
            return null
          }
        },
        card () {
          if (!this.dv || !this.ready) return {}
          const dv = this.dv
          const credit = this.getTxn(160) // 最近加值交易
          const deducts = _.sortBy(_.map([16, 17, 18, 20, 21, 22], blk => this.getTxn(blk << 4)), ['time'])

          // 轉乘群組
          const xferGroups = _.keyBy(_.map([12, 26], blk => this.getXferGroup(blk << 4)), 'tsqn')
          // 轉乘交易紀錄 Usage TXN Record for Transfer (S3B0, S6B2)
          const xfers = _.sortBy(_.map([
            { txn: 13, group: 12 },
            { txn: 14, group: 26 },
          ], blk => ({
            ...this.getXferGroup((blk.group << 4) + 12),
            ...this.getTxn(blk.txn << 4),
          })), ['time'])

          // 公車上下車紀錄
          const buses = _.map([45, 46], blk => this.getBus(blk << 4))
          // 台北捷運
          const mrts = _.sortBy(_.filter(_.map([29, 30, 49, 50], blk => this.getMrts(blk << 4))), 'time')

          return {
            area: this.getAreaCode(90), // 區碼
            autoload: dv.getUint16(81, true), // 自動加值
            balance: this.getInt24(144, true), // 餘額
            bank: this.getBankCode(91), // 加值銀行
            buses, // 公車上下車紀錄
            credit, // 最近加值交易
            deducts, // 最近扣款交易
            exp: this.unixToStr(dv.getUint32(73, true) - 28800), // 有效時間
            issued: this.unixToStr(dv.getUint32(69, true) - 28800), // 製造時間
            mrts, // 捷運進出站紀錄
            tsqn: `0x${this.getHex(192, 2, true)} (${dv.getUint16(192, true)})`, // 交易序號
            type: this.getCardType(93), // 卡別
            uid: this.getHex(0, 4, true), // 卡片編號
            usageControl: this.getUsageControl(24), // 票卡功能開關
            xfers, // 轉乘交易紀錄
            quota: {
              daily: dv.getUint16(83, true), // 日限額金額
              date: this.easycardDateToStr(dv.getUint16(1003, true)), // 日限額日期
              once: dv.getUint16(85, true), // 日限額金額
              used: this.getUint24(1005, true), // 日限額金額
            },
            profile: { // 身份別與到期時間
              exp: this.unixToStr(dv.getUint32(961, true) - 28800),
              type: this.getProfile(960),
            },
          }
        },
      },
      methods: {
        async init () {
          try {
            await Promise.all([
              this.initSploc(), // 讀取 sp_loc_mapping.csv
              this.initMappingJson5(), // 讀取 mapping.json5
            ])
          } catch (err) {
            console.error(err)
            Swal.fire({ icon: 'error', title: '發生錯誤', text: err.message })
          }
        },
        async initSploc () {
          const rows = await this.getCsv(`${URL_GIST}/sp_loc_mapping.csv`)
          const sploc = {}
          _.each(rows, row => {
            _.setWith(sploc, `${row.spId}.${row.locId}`, { provider: _.trim(row.spName), location: _.trim(row.locName) }, Object)
          })
          this.$set(this.cached, 'sploc', sploc)
        },
        async initMappingJson5 () {
          const json5 = JSON5.parse(_.get(await axios.get(`${URL_GIST}/mapping.json5`), 'data'))
          _.each(json5, (val, key) => this.$set(this.cached, key, val))
        },
        async getCsv (url, cachetime = 3e4) {
          const csv = _.trim(_.get(await axios.get(url, {
            params: { cachebust: _.floor(Date.now() / cachetime) },
          }), 'data'))
          return _.get(Papa.parse(csv, {
            encoding: 'utf8',
            header: true,
          }), 'data', [])
        },
        getHex (byteOffset, byteLength, littleEndian = false) {
          const arr = [...new Uint8Array(this.dv.buffer, byteOffset, byteLength)] // reverse 不可以改到原始資料
          if (littleEndian) arr.reverse()
          return _.map(arr, b => `0${b.toString(16)}`.slice(-2)).join('')
        },
        getInt24 (byteOffset, littleEndian = false) {
          return Number(BigInt.asIntN(24, BigInt(`0x${this.getHex(byteOffset, 3, littleEndian)}`)))
        },
        getUint24 (byteOffset, littleEndian = false) {
          return Number(BigInt.asUintN(24, BigInt(`0x${this.getHex(byteOffset, 3, littleEndian)}`)))
        },
        getTxn (byteOffset) { // 16 bytes
          const dv = this.dv
          return {
            ...this.getSpLoc(byteOffset + 10, byteOffset + 11),
            amount: dv.getInt16(byteOffset + 6, true),
            device: `0x${this.getHex(byteOffset + 12, 4, true)}`,
            ev: dv.getInt16(byteOffset + 8, true),
            oldXferGroup: `0x${this.getHex(byteOffset + 10, 1)}`,
            time: this.unixToStr(dv.getUint32(byteOffset + 1, true) - 28800),
            tsqn: `0x${this.getHex(byteOffset, 1)}`,
            tsqnUint: dv.getUint8(byteOffset),
            type: this.getTxnType(byteOffset + 5),
          }
        },
        getBus (byteOffset) {
          const dv = this.dv
          return {
            agent: `0x${this.getHex(byteOffset + 3, 2, true)}`,
            line: `0x${this.getHex(byteOffset + 5, 2)}`,
            time: this.unixToStr(dv.getUint32(byteOffset + 7, true) - 28800),
            station: dv.getUint8(byteOffset + 11),
            zone: dv.getUint8(byteOffset + 12),
          }
        },
        getMrts (byteOffset) { // 捷運
          const dv = this.dv
          const unix = dv.getUint32(byteOffset + 9, true)
          if (!unix) return
          const sploc = {
            0: _.get(this.cached, 'sploc.2', {}),
            100: _.get(this.cached, 'sploc.100', {}),
            103: _.get(this.cached, 'sploc.103', {}),
            105: _.get(this.cached, 'sploc.105', {}),
            107: _.get(this.cached, 'sploc.107', {}),
            200: _.get(this.cached, 'sploc.200', {}),
          }
          const sp = dv.getUint8(byteOffset + 15)
          const loc = dv.getUint8(byteOffset + 4)
          return {
            ..._.get(sploc, `${sp}.${loc}`, { provider: `${sp}`, location: `${loc}` }), // 業者 + 站點
            amount: dv.getUint16(byteOffset + 6), // 捷運累計金額
            count: dv.getUint8(byteOffset + 5), // 捷運累計次數
            time: this.unixToStr(unix - 28800),
            type: '出進'[dv.getUint8(byteOffset + 3)] + '站', // 進出站
          }
        },
        unixToStr (unix) {
          return dayjs.unix(unix).format('YYYY-MM-DD HH:mm:ss')
        },
        easycardDateToStr (u16) {
          if (u16 < 1) return '無資料'
          return dayjs(`${1980 + (u16 >> 9)}-${(u16 >> 5) & 0xF}-${u16 & 0x1F}`).format('YYYY-MM-DD')
        },
        getSpLoc (byteOffsetSp, byteOffsetLoc) {
          const sploc = _.get(this.cached, 'sploc', {})
          const dv = this.dv
          const [sp, loc] = [dv.getUint8(byteOffsetSp), dv.getUint8(byteOffsetLoc)]
          return _.get(sploc, `${sp}.${loc}`) || _.get(sploc, `${sp}.0`) || { provider: `${sp}`, location: `${loc}` }
        },
        getUsageControl (byteOffset) {
          const dv = this.dv
          const FLAG_NAMES = ['已啟用', '被封鎖', '已退卡', '自動加值', 'Credit']
          const flags = `00000${dv.getUint8(byteOffset).toString(2)}`.slice(-5).split('').reverse()
          return _.join(_.filter(FLAG_NAMES, (v, k) => flags[k] === '1'))
        },
        getXferGroup (byteOffset) {
          return {
            before: this.getXferCode(byteOffset), // LSB byte 轉乘前群組
            after: this.getXferCode(byteOffset + 1), // MSB byte 轉乘後群組
          }
        },
        getAreaCode: window.createGetMappingOrHexFn('cached.areaCodes'),
        getAuthProfile: window.createGetMappingOrHexFn('cached.authProfiles'),
        getBankCode: window.createGetMappingOrHexFn('cached.bankCodes'),
        getCardType: window.createGetMappingOrHexFn('cached.cardTypes'),
        getProfile: window.createGetMappingOrHexFn('cached.profiles'),
        getTxnType: window.createGetMappingOrHexFn('cached.txnTypes'),
        getXferCode: window.createGetMappingOrHexFn('cached.xferCodes'),
      },
    })
