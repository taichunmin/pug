extends /layout/default

block beforehtml
  - const title = '截碼戰記錄紙'

block style
  meta(property="fb:app_id", content="2133031763635285")
  meta(property="og:description", content="桌遊「截碼戰 Decrypto」的記錄紙")
  meta(property="og:image:height", content="600")
  meta(property="og:image:width", content="1000")
  meta(property="og:image", content="https://i.imgur.com/3YnV3w1.png")
  meta(property="og:locale", content="zh_TW")
  meta(property="og:site_name", content="筆記國度")
  meta(property="og:title", content=title)
  meta(property="og:type", content="website")
  meta(property="og:url", content="https://taichunmin.idv.tw/pug/boardgame-decrypto.html")
  style
    :sass
      [v-cloak]
        display: none
      body, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6
        font-family: 'Noto Sans TC', sans-serif
      .btn-group>.btn-dark:not(:first-child)
        border-left-color: #fff
      .input-group-append
        &>.dropdown>.btn
          border-top-left-radius: 0
          border-bottom-left-radius: 0
        &>.dropdown:not(:last-child)>.btn
          border-top-right-radius: 0
          border-bottom-right-radius: 0

block content
  #app.my-3.container(v-cloak)
    h2.mb-3.text-center 截碼戰記錄紙
    .form-group
      label 選擇回合 (目前：{{ '白黑'[wb] }} {{ i.cur % 8 + 1 }})
      .btn-group.d-flex.mb-1
        button.btn.btn-outline-dark(type="button", v-for="round in 8", @click="i.cur = round - 1", :disabled="i.cur === round - 1", tabindex="-1") {{ round }}
      .btn-group.d-flex
        button.btn.btn-dark(type="button", v-for="round in 8", @click="i.cur = round + 7", :disabled="i.cur === round + 7", tabindex="-1") {{ round }}
    .form-group
      label 線索 / 猜測密碼 / 正確密碼
      .input-group.mb-1(v-for="clue, clueId in round")
        .input-group-prepend
          span.input-group-text {{ '①②③'[clueId] }}
        input.form-control(type="text", placeholder="請輸入線索", v-model="clue[0]")
        .input-group-append.text-monospace
          .dropdown
            button.btn.btn-primary.dropdown-toggle(type="button", data-toggle="dropdown", tabindex="-1") {{ clue[1] > 0 ? clue[1] : '?' }}
            .dropdown-menu.dropdown-menu-right
              button.dropdown-item.btn-primary(type="button", v-for="guess in 4", @click="$set(clue, 1, guess)", tabindex="-1") 猜測密碼為 {{ guess }}
          .dropdown
            button.btn.btn-success.dropdown-toggle(type="button", data-toggle="dropdown", tabindex="-1") {{ clue[2] > 0 ? clue[2] : '?' }}
            .dropdown-menu.dropdown-menu-right
              button.dropdown-item.btn-primary(type="button", v-for="code in 4", @click="$set(clue, 2, code)", tabindex="-1") 正確密碼為 {{ code }}
    .card.mb-3(v-for="hints, code in hintsByCode")
      .card-header(:class="wb ? 'text-white bg-dark' : 'bg-light'") #[i.fa.fa-info-circle.mr-1] 關鍵字 {{ code + 1 }} 線索
      ul.list-group.list-group-flush(v-if="hints.length")
        li.list-group-item(v-for="hint in hints") {{ hint }}
      .card-body(v-else)
        p.card-text.text-muted 無線索
    button.btn.btn-block.btn-outline-danger(type="button", @click="btnReset()", tabindex="-1") #[span.fa.fa-fw.fa-trash-o] 清空資料

block script
  script.
    window.vm = new Vue({
      el: '#app',
      data: {
        i: {
          cur: 0,
          rounds: null,
        },
      },
      async mounted () {
        // 自動儲存功能
        try {
          const saved = JSON5.parse(localStorage.getItem(location.pathname))
          if (saved) this.$set(this, 'i', { ...this.i, ...saved })
        } catch (err) {}
        this.$watch('i', () => {
          localStorage.setItem(location.pathname, JSON5.stringify(this.i))
        }, { deep: true })

        if (!this.i.rounds) await this.btnReset(true)
      },
      computed: {
        wb () {
          return this.i.cur < 8 ? 0 : 1 // 白黑
        },
        round () {
          return this.i.rounds ? this.i.rounds[this.i.cur] : _.times(3, () => ['', 0, 0])
        },
        hintsByCode () {
          const hints = _.times(4, () => [])
          if (this.i.rounds) {
            for (let i = 0; i < 8; i++) {
              for (const clue of this.i.rounds[this.wb * 8 + i]) {
                if (!clue[0] || clue[2] === 0) continue
                hints[clue[2] - 1].push(clue[0])
              }
            }
          }
          return hints
        },
      },
      methods: {
        async btnReset (slient = false) {
          if (!slient) {
            const confirm = await Swal.fire({
              cancelButtonColor: '#3085d6',
              cancelButtonText: '保持原樣',
              confirmButtonColor: '#d33',
              confirmButtonText: '重設紀錄',
              focusCancel: true,
              icon: 'warning',
              showCancelButton: true,
              text: '是否開始 1 個全新的紀錄？',
            })
            if (!confirm.value) return
          }
          this.i.cur = 0
          this.i.rounds = _.times(16, () => _.times(3, () => ['', 0, 0]))
        },
      },
    })
